[2025-05-16 23:28:41,027] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:28:41,027] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:28:41,027] [DEBUG] Calling on_field_data with data[9:68]
[2025-05-16 23:28:41,027] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:28:41,027] [DEBUG] Calling on_end with no data
[2025-05-16 23:28:41,027] [INFO] Received question: что в файле?
[2025-05-16 23:28:41,027] [DEBUG] Retrieving top 5 relevant chunks for query: 'что в файле?'
[2025-05-16 23:28:41,027] [ERROR] Vectorstore not found. You must build it first.
[2025-05-16 23:28:41,027] [ERROR] Failed to process question.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 41, in ask_question
    context = retrieve_relevant_chunks(question)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/rag_engine.py", line 40, in retrieve_relevant_chunks
    raise ValueError("Vectorstore not found. Please build it first.")
ValueError: Vectorstore not found. Please build it first.
[2025-05-16 23:28:57,946] [DEBUG] Calling on_part_begin with no data
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_field with data[42:61]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_value with data[63:126]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_field with data[128:140]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_value with data[142:157]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:28:57,947] [DEBUG] Calling on_headers_finished with no data
[2025-05-16 23:28:57,947] [DEBUG] Calling on_part_data with data[161:16384]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_part_data with data[0:262144]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_part_data with data[0:262144]
[2025-05-16 23:28:57,947] [DEBUG] Calling on_part_data with data[0:151111]
[2025-05-16 23:28:57,948] [DEBUG] Calling on_part_end with no data
[2025-05-16 23:28:57,948] [DEBUG] Calling on_end with no data
[2025-05-16 23:28:57,948] [INFO] Received file upload: heather_Respiratory Plan.pdf
[2025-05-16 23:28:57,948] [ERROR] Failed to upload and process PDF.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 28, in upload_pdf
    text = load_pdf(file.file)
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/document_loader.py", line 13, in load_pdf
    if not os.path.exists(path):
           ^^^^^^^^^^^^^^^^^^^^
  File "<frozen genericpath>", line 19, in exists
TypeError: stat: path should be string, bytes, os.PathLike or integer, not SpooledTemporaryFile
[2025-05-16 23:29:06,464] [DEBUG] Calling on_part_begin with no data
[2025-05-16 23:29:06,464] [DEBUG] Calling on_header_field with data[42:61]
[2025-05-16 23:29:06,464] [DEBUG] Calling on_header_value with data[63:146]
[2025-05-16 23:29:06,464] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:29:06,464] [DEBUG] Calling on_header_field with data[148:160]
[2025-05-16 23:29:06,464] [DEBUG] Calling on_header_value with data[162:177]
[2025-05-16 23:29:06,465] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:29:06,465] [DEBUG] Calling on_headers_finished with no data
[2025-05-16 23:29:06,465] [DEBUG] Calling on_part_data with data[181:16384]
[2025-05-16 23:29:06,465] [DEBUG] Calling on_part_data with data[0:125134]
[2025-05-16 23:29:06,465] [DEBUG] Calling on_part_end with no data
[2025-05-16 23:29:06,466] [DEBUG] Calling on_end with no data
[2025-05-16 23:29:06,466] [INFO] Received file upload: Interkal Safety Incident Procedure 12-9-2021.pdf
[2025-05-16 23:29:06,466] [ERROR] Failed to upload and process PDF.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 28, in upload_pdf
    text = load_pdf(file.file)
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/document_loader.py", line 13, in load_pdf
    if not os.path.exists(path):
           ^^^^^^^^^^^^^^^^^^^^
  File "<frozen genericpath>", line 19, in exists
TypeError: stat: path should be string, bytes, os.PathLike or integer, not SpooledTemporaryFile
[2025-05-16 23:29:15,712] [DEBUG] Calling on_part_begin with no data
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_field with data[42:61]
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_value with data[63:146]
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_field with data[148:160]
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_value with data[162:177]
[2025-05-16 23:29:15,713] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:29:15,713] [DEBUG] Calling on_headers_finished with no data
[2025-05-16 23:29:15,713] [DEBUG] Calling on_part_data with data[181:141518]
[2025-05-16 23:29:15,713] [DEBUG] Calling on_part_end with no data
[2025-05-16 23:29:15,713] [DEBUG] Calling on_end with no data
[2025-05-16 23:29:15,713] [INFO] Received file upload: Interkal Safety Incident Procedure 12-9-2021.pdf
[2025-05-16 23:29:15,713] [ERROR] Failed to upload and process PDF.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 28, in upload_pdf
    text = load_pdf(file.file)
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/document_loader.py", line 13, in load_pdf
    if not os.path.exists(path):
           ^^^^^^^^^^^^^^^^^^^^
  File "<frozen genericpath>", line 19, in exists
TypeError: stat: path should be string, bytes, os.PathLike or integer, not SpooledTemporaryFile
[2025-05-16 23:29:19,487] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:29:19,487] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:29:19,487] [DEBUG] Calling on_field_data with data[9:68]
[2025-05-16 23:29:19,487] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:29:19,487] [DEBUG] Calling on_end with no data
[2025-05-16 23:29:19,487] [INFO] Received question: что в файле?
[2025-05-16 23:29:19,487] [DEBUG] Retrieving top 5 relevant chunks for query: 'что в файле?'
[2025-05-16 23:29:19,487] [ERROR] Vectorstore not found. You must build it first.
[2025-05-16 23:29:19,487] [ERROR] Failed to process question.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 41, in ask_question
    context = retrieve_relevant_chunks(question)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/rag_engine.py", line 40, in retrieve_relevant_chunks
    raise ValueError("Vectorstore not found. Please build it first.")
ValueError: Vectorstore not found. Please build it first.
[2025-05-16 23:34:39,987] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:34:39,987] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:34:39,988] [DEBUG] Calling on_field_data with data[9:68]
[2025-05-16 23:34:39,988] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:34:39,988] [DEBUG] Calling on_end with no data
[2025-05-16 23:34:39,988] [INFO] Received question: что в файле?
[2025-05-16 23:34:39,989] [DEBUG] Retrieving top 5 relevant chunks for query: 'что в файле?'
[2025-05-16 23:34:39,989] [ERROR] Vectorstore not found. You must build it first.
[2025-05-16 23:34:39,989] [ERROR] Failed to process question.
Traceback (most recent call last):
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/main.py", line 41, in ask_question
    context = retrieve_relevant_chunks(question)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/igorpopov/py_proj/PETs/1_pet/app/rag_engine.py", line 40, in retrieve_relevant_chunks
    raise ValueError("Vectorstore not found. Please build it first.")
ValueError: Vectorstore not found. Please build it first.
[2025-05-16 23:35:00,532] [DEBUG] Calling on_part_begin with no data
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_field with data[42:61]
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_value with data[63:134]
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_field with data[136:148]
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_value with data[150:165]
[2025-05-16 23:35:00,533] [DEBUG] Calling on_header_end with no data
[2025-05-16 23:35:00,533] [DEBUG] Calling on_headers_finished with no data
[2025-05-16 23:35:00,534] [DEBUG] Calling on_part_data with data[169:88684]
[2025-05-16 23:35:00,534] [DEBUG] Calling on_part_end with no data
[2025-05-16 23:35:00,534] [DEBUG] Calling on_end with no data
[2025-05-16 23:35:00,534] [INFO] Received file upload: 1325_AG-SE-0000-04 HazCom Policy.pdf
[2025-05-16 23:35:00,534] [DEBUG] Reading PDF content from uploaded file object.
[2025-05-16 23:35:00,622] [DEBUG] Splitting text into chunks for vectorstore indexing.
[2025-05-16 23:35:00,622] [INFO] Building vectorstore from provided text chunks...
[2025-05-16 23:35:00,719] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-466c0392-1000-4da6-9cc7-f01776e70b50', 'post_parser': <function Embeddings.create.<locals>.parser at 0x10582ad40>, 'json_data': {'input': [[2878, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 16, 315, 220, 20, 720, 29316, 3340, 3296, 25, 25557, 19645, 12, 7476, 220, 23096, 16169, 32, 16314, 3340, 25, 220, 23, 14, 966, 14, 1032, 720, 3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 720, 96545, 7297, 720, 1271, 6106, 430, 279, 52642, 315, 682, 26333, 1511, 520, 25557, 19645, 527, 26126, 11, 323, 430, 2038, 720, 444, 29644, 287, 872, 52642, 374, 34699, 311, 89589, 2128, 3697, 13, 220, 8068, 3697, 617, 264, 1314, 720, 998, 1440, 922, 279, 52642, 315, 279, 26333, 304, 279, 27465, 13, 33006, 77465, 1777], [998, 1440, 922, 279, 52642, 315, 279, 26333, 304, 279, 27465, 13, 33006, 77465, 1777, 720, 2028, 10537, 17208, 311, 25557, 19645, 4892, 5270, 11, 4953, 2637, 25557, 19645, 42177, 14689, 11, 4953, 2637, 720, 91942, 19645, 42177, 22319, 11, 4953, 2637, 323, 328, 362, 3711, 445, 1236, 732, 13, 320, 91942, 19645, 8, 2128, 3697, 323, 720, 32409, 430, 5371, 11, 3637, 11, 1005, 11, 477, 28490, 315, 51024, 26333, 13, 720, 86584, 720, 1682, 70921, 220, 7529, 15, 13, 4364, 15, 720, 41676, 84160, 720, 40, 13, 36424, 29226, 720, 64, 13, 578, 51024, 7384, 31384, 690, 1893, 323, 10519, 264, 1160, 315, 682, 720, 32056, 82, 304, 279, 27465, 13], [32056, 82, 304, 279, 27465, 13, 720, 65, 13, 578, 11742, 1160, 690, 6782, 264, 2027, 13110, 430, 374, 25819, 389, 279, 720, 29228, 19220, 2956, 28841, 369, 5425, 73723, 10096, 13, 720, 66, 13, 578, 1160, 690, 387, 22690, 30171, 369, 502, 26333, 11, 27489, 477, 5614, 720, 5608, 50, 11, 323, 26333, 912, 5129, 1511, 304, 279, 27465, 13, 33006, 5660, 13, 19220, 2956, 61572, 320, 5608, 50, 8, 720, 64, 13, 39306, 323, 10067, 720, 72, 13, 19220, 2956, 61572, 527, 279, 6156, 2592, 315, 2038, 720, 444, 29644, 287, 279, 52642, 315, 26333, 304, 279, 990, 3158, 13, 8068], [444, 29644, 287, 279, 52642, 315, 26333, 304, 279, 990, 3158, 13, 8068, 720, 23832, 690, 11537, 553, 5694, 449, 279, 96712, 47031, 311, 720, 32056, 82, 304, 872, 990, 5789, 13, 720, 3893, 13, 578, 69874, 788, 32009, 43424, 690, 6929, 264, 3477, 315, 96712, 720, 9125, 220, 30171, 311, 6106, 430, 682, 279, 96712, 527, 13687, 323, 709, 4791, 7058, 1045, 449, 682, 6300, 2038, 47031, 311, 26333, 304, 5708, 13, 720, 19997, 13003, 690, 387, 18908, 389, 279, 96712, 1796, 2246, 13, 720, 65, 13, 51982, 369, 10506, 555, 8068, 3697], [19997, 13003, 690, 387, 18908, 389, 279, 96712, 1796, 2246, 13, 720, 65, 13, 51982, 369, 10506, 555, 8068, 3697, 720, 72, 13, 5884, 9548, 1253, 1715, 311, 3477, 904, 96712, 13, 578, 38419, 690, 720, 71, 55137, 279, 1715, 2949, 279, 9548, 753, 990, 6541, 13, 1442, 279, 720, 13066, 32496, 374, 539, 2561, 11, 279, 69874, 788, 32009, 43424, 477, 720, 10920, 10790, 649, 16044, 1778, 7540, 13, 720, 66, 13, 1561, 27901, 1392, 720, 72, 13, 32936, 369, 502, 26333, 690, 2997, 264, 1715, 430, 279, 21390, 720, 95783, 459, 96712, 449, 279, 44854, 315, 430, 2027, 13, 720, 220, 5856, 45546], [95783, 459, 96712, 449, 279, 44854, 315, 430, 2027, 13, 720, 220, 5856, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 17, 315, 220, 20, 720, 29316, 3340, 3296, 25, 25557, 19645, 12, 7476, 220, 23096, 16169, 32, 16314, 3340, 25, 220, 23, 14, 966, 14, 1032, 720, 3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 720, 23440, 13, 9876, 9587, 287, 720, 64, 13, 2052, 24794, 304, 279, 990, 2035, 690, 387, 30929, 449, 279, 2768, 720, 26125, 25, 720, 72, 13, 27638, 315, 279, 51024, 11742, 11, 720, 3893, 13, 1883, 25264, 31397, 19530, 13, 720, 65, 13, 2052, 9382, 690, 387, 2531, 1260, 323, 74088, 12882, 304, 6498, 13, 720, 66, 13, 97243, 24794], [65, 13, 2052, 9382, 690, 387, 2531, 1260, 323, 74088, 12882, 304, 6498, 13, 720, 66, 13, 97243, 24794, 720, 72, 13, 1102, 374, 279, 12014, 315, 279, 1050, 47444, 6011, 58207, 311, 720, 28389, 682, 279, 19957, 24794, 527, 30929, 449, 279, 8475, 720, 26125, 320, 17341, 11, 31397, 11, 19530, 11, 14290, 11, 5099, 6266, 720, 3893, 13, 578, 2768, 10537, 690, 387, 8272, 311, 6106, 430, 502, 720, 40499, 16661, 279, 27465, 527, 10489, 30929, 25, 720, 16, 13, 578, 1050, 47444, 58207, 477, 813, 477, 1077, 2955, 2176, 690, 25052], [16, 13, 578, 1050, 47444, 58207, 477, 813, 477, 1077, 2955, 2176, 690, 25052, 720, 543, 19957, 59721, 315, 24794, 477, 51024, 720, 32056, 82, 13, 720, 17, 13, 1442, 539, 10489, 30929, 11, 279, 5593, 690, 1243, 387, 30929, 720, 76571, 2718, 1701, 279, 96712, 369, 2038, 323, 45827, 8201, 955, 720, 17298, 13, 1442, 1070, 527, 4860, 11, 279, 38419, 690, 8666, 449, 720, 1820, 69874, 788, 32009, 43424, 477, 279, 6826, 720, 2087, 13, 720, 67, 13, 99393, 304, 5560, 304, 279, 5664, 12299, 720, 72, 13, 1102, 374, 279, 12014, 315, 279, 1732, 19546, 279, 11742, 505], [72, 13, 1102, 374, 279, 12014, 315, 279, 1732, 19546, 279, 11742, 505, 720, 13787, 311, 6106, 430, 433, 374, 10489, 30929, 449, 279, 9764, 315, 279, 720, 32056, 11, 279, 14290, 323, 904, 31397, 19530, 13, 1442, 279, 720, 3670, 374, 75298, 30929, 279, 9548, 690, 3729, 279, 6541, 720, 13066, 32496, 13, 256, 7429, 11, 904, 9548, 9455, 477, 1701, 264, 5593, 477, 720, 3107, 902, 374, 539, 10489, 30929, 690, 15820, 813, 477, 1077, 720, 13066, 32496, 13, 720, 3893, 13, 578, 38419, 690, 1833, 709, 555, 63025, 279, 1050, 47444, 58207], [13066, 32496, 13, 720, 3893, 13, 578, 38419, 690, 1833, 709, 555, 63025, 279, 1050, 47444, 58207, 720, 1073, 279, 1493, 11, 779, 430, 568, 477, 1364, 1253, 3729, 279, 21390, 323, 5471, 264, 720, 265, 14310, 21201, 315, 279, 3575, 13, 720, 35694, 13, 1102, 374, 279, 12014, 315, 279, 38419, 311, 48582, 25052, 813, 477, 720, 1964, 9476, 369, 75298, 30929, 51024, 26333, 11, 323, 720, 1530, 279, 46579, 5593, 1161, 8, 7214, 11, 1701, 279, 720, 6133, 6961, 287, 19220, 2956, 28841, 1161, 570, 720, 344, 13, 578, 55402, 1887, 1511, 1023, 1109, 1884, 3984, 555, 20972], [344, 13, 578, 55402, 1887, 1511, 1023, 1109, 1884, 3984, 555, 20972, 720, 14724, 387, 279, 5165, 6785, 19721, 10229, 320, 39167, 8201, 8, 31397, 720, 89676, 13, 720, 85, 13, 42585, 24794, 1139, 902, 51024, 26333, 527, 23217, 720, 14724, 387, 30929, 4972, 311, 7999, 279, 11742, 13, 720, 3166, 13, 17275, 16543, 323, 8245, 720, 64, 13, 4220, 16543, 720, 72, 13, 578, 6826, 10790, 374, 8647, 369, 23391, 430, 682, 2128, 720, 23832, 527, 16572, 304, 279, 2768, 25, 220, 5856, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 18, 315, 220, 20], [23832, 527, 16572, 304, 279, 2768, 25, 220, 5856, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 18, 315, 220, 20, 720, 29316, 3340, 3296, 25, 25557, 19645, 12, 7476, 220, 23096, 16169, 32, 16314, 3340, 25, 220, 23, 14, 966, 14, 1032, 720, 3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 720, 16, 13, 8245, 389, 507, 34245, 753, 10291, 59408, 16222, 3409, 2383, 11, 720, 17, 13, 69874, 788, 26333, 3118, 304, 279, 990, 3158, 11, 18815, 720, 21704, 7106, 323, 2890, 52642, 11, 720, 18, 13, 25927, 304, 279, 990, 3158, 1405, 51024, 26333, 527, 720, 29844, 11, 720, 19, 13, 12589, 315, 279, 69874, 31966, 6826, 8040, 555], [29844, 11, 720, 19, 13, 12589, 315, 279, 69874, 31966, 6826, 8040, 555, 720, 91942, 19645, 11, 2737, 3813, 323, 18539, 315, 96712, 11, 323, 279, 720, 26650, 69874, 31966, 6826, 11, 720, 20, 13, 16543, 5528, 1511, 311, 11388, 279, 9546, 477, 4984, 315, 720, 71, 58757, 788, 11742, 11, 720, 21, 13, 73656, 323, 9548, 649, 1935, 311, 6144, 5694, 505, 720, 10236, 14675, 311, 51024, 26333, 13, 720, 3893, 13, 5884, 892, 264, 11742, 449, 264, 502, 31397, 538, 374, 11784, 1139, 279, 720, 1816, 3158, 11, 279, 38419, 374, 8647, 369, 3339, 2771, 8420], [1816, 3158, 11, 279, 38419, 374, 8647, 369, 3339, 2771, 8420, 720, 548, 8010, 315, 279, 52642, 315, 279, 502, 11742, 11, 1701, 279, 19220, 2956, 720, 10764, 439, 264, 8641, 13, 720, 65, 13, 19331, 315, 31701, 287, 8068, 3697, 315, 279, 32595, 2402, 315, 11842, 11151, 14492, 720, 26527, 720, 72, 13, 1442, 904, 1778, 3465, 690, 387, 23926, 11, 279, 38419, 11, 304, 2015, 311, 720, 28389, 279, 2890, 323, 7296, 315, 279, 9548, 1161, 8, 16785, 279, 720, 8366, 11, 690, 1833, 279, 16346, 10212, 3770, 1603, 7314, 279, 720, 8366, 25], [8366, 11, 690, 1833, 279, 16346, 10212, 3770, 1603, 7314, 279, 720, 8366, 25, 720, 16, 13, 578, 38419, 690, 3477, 279, 19220, 2956, 28841, 1161, 8, 9959, 720, 998, 279, 3465, 13, 12540, 279, 38419, 2733, 279, 31020, 315, 279, 720, 71, 1394, 2402, 374, 1778, 430, 279, 9548, 1288, 5371, 5217, 720, 31754, 477, 7754, 315, 279, 3465, 311, 387, 10887, 11, 568, 477, 1364, 720, 14724, 656, 779, 13, 720, 17, 13, 578, 38419, 690, 3477, 279, 19220, 2956, 28841, 1161, 8, 449, 279, 720, 98673, 2128, 3697, 1161, 570, 720, 18, 13, 578, 38419, 690, 6179, 279, 2128, 3697, 315, 279, 52642], [98673, 2128, 3697, 1161, 570, 720, 18, 13, 578, 38419, 690, 6179, 279, 2128, 3697, 315, 279, 52642, 720, 50187, 449, 279, 26333, 6532, 304, 279, 2536, 3880, 14492, 720, 25792, 11, 1778, 439, 77773, 367, 315, 16174, 369, 264, 16174, 33053, 13, 720, 73097, 25346, 11, 279, 38419, 690, 1101, 6179, 279, 9548, 1161, 8, 315, 720, 1820, 52642, 5938, 449, 279, 2536, 3880, 14492, 3465, 5196, 11, 1778, 720, 300, 13192, 4441, 11, 3361, 13709, 9256, 11, 1825, 46121, 11, 5099, 13, 720, 791, 2128, 3697, 690, 387, 16572, 311, 5766, 2225, 11742], [791, 2128, 3697, 690, 387, 16572, 311, 5766, 2225, 11742, 720, 438, 3465, 52642, 6532, 449, 279, 2536, 3880, 14492, 3465, 1161, 570, 720, 19, 13, 62924, 42314, 690, 6179, 8420, 315, 279, 52642, 315, 720, 32056, 82, 304, 65985, 23121, 32275, 4972, 311, 13709, 477, 1023, 720, 1816, 389, 32275, 323, 7241, 13, 720, 66, 13, 19331, 315, 31701, 287, 98893, 315, 36424, 32595, 2402, 720, 72, 13, 2052, 4994, 33840, 3318, 520, 25557, 19645, 690, 387, 3984, 720, 20871, 269, 7296, 4967, 13, 220, 1115, 4967, 374, 279, 12014, 315, 279, 220, 5856, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371], [2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 19, 315, 220, 20, 720, 29316, 3340, 3296, 25, 25557, 19645, 12, 7476, 220, 23096, 16169, 32, 16314, 3340, 25, 220, 23, 14, 966, 14, 1032, 720, 3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 720, 91942, 19645, 3729, 13, 220, 763, 5369, 11, 279, 25557, 19645, 3729, 690, 1101, 3493, 720, 52340, 2038, 311, 279, 31072, 9002, 25, 720, 16, 13, 5884, 96712, 9959, 311, 279, 3465, 13, 720, 17, 13, 5884, 3361, 52642, 315, 279, 3465, 5196, 11, 1778, 439, 13192, 4441, 11, 720, 15495, 13709, 9256, 11, 1825, 46121, 11, 5099, 13, 720, 18, 13, 578, 55402, 8670, 315, 682, 11742, 24794, 323, 279, 720, 9125, 304, 1005, 520, 25557, 19645, 13], [18, 13, 578, 55402, 8670, 315, 682, 11742, 24794, 323, 279, 720, 9125, 304, 1005, 520, 25557, 19645, 13, 33006, 13963, 691, 68861, 320, 333, 4460, 8, 33006, 68883, 30626, 24505, 33006, 32, 13, 12280, 11106, 323, 17275, 4076, 33006, 16, 13, 6826, 10790, 25, 720, 64, 13, 4324, 323, 10519, 264, 31397, 10758, 2068, 13, 720, 65, 13, 30379, 682, 2128, 3697, 527, 16572, 311, 279, 8670, 315, 420, 10537, 13, 720, 66, 13, 30379, 11236, 315, 96712, 323, 279, 5439, 2068, 527, 2561, 311, 682, 2128, 720, 23832, 323, 507, 34245, 13, 720, 17, 13, 69874, 788, 32009, 43424, 25], [23832, 323, 507, 34245, 13, 720, 17, 13, 69874, 788, 32009, 43424, 25, 720, 64, 13, 4324, 323, 10519, 264, 1160, 315, 682, 26333, 1511, 304, 279, 27465, 13, 720, 65, 13, 10506, 323, 29251, 502, 26333, 323, 11742, 52642, 13, 720, 66, 13, 40665, 5216, 323, 7754, 994, 4860, 31889, 13, 720, 18, 13, 58207, 14, 44456, 323, 1050, 47444, 58207, 25, 720, 64, 13, 34663, 682, 26333, 527, 4036, 449, 459, 96712, 11, 477, 430, 832, 374, 389, 1052, 13, 720, 65, 13, 34663, 682, 26333, 527, 4036, 24129, 270, 264, 2440, 11, 477, 3493, 832, 422, 23217, 720, 998, 264, 502, 5593, 13], [998, 264, 502, 5593, 13, 720, 66, 13, 40665, 7754, 369, 12588, 11, 7366, 11, 28672, 11, 323, 1701, 26333, 13, 720, 67, 13, 40665, 7754, 369, 2536, 3880, 14492, 9256, 430, 2997, 11742, 52642, 13, 720, 19, 13, 25557, 19645, 9359, 25, 720, 64, 13, 30379, 33840, 617, 8475, 2038, 311, 10299, 11742, 52642, 720, 20670, 1253, 387, 15246, 311, 13, 720, 220, 5856, 45546, 720, 2903, 25, 15432, 12, 937, 12, 931, 15, 12, 2371, 720, 2732, 25, 220, 20, 315, 220, 20, 720, 29316, 3340, 3296, 25, 25557, 19645, 12, 7476, 220, 23096, 16169, 32, 16314, 3340, 25, 220, 23, 14, 966, 14, 1032, 720, 3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 33006, 793, 48771, 50], [3936, 25, 69874, 31966, 6826, 10315, 13, 2696, 25, 2355, 33006, 793, 48771, 50, 33006, 791, 8351, 1253, 65836, 279, 19705, 315, 420, 281, 938, 13498, 520, 904, 892, 449, 477, 2085, 720, 24467, 13, 220, 15903, 11, 1778, 19705, 527, 539, 10825, 311, 1893, 11, 6463, 527, 814, 311, 387, 71259, 311, 720, 1040, 275, 1088, 264, 5226, 1990, 279, 19683, 323, 904, 832, 477, 682, 315, 1202, 8420, 13, 33006, 29688, 26678, 323, 27893, 11346, 33006, 7676, 64877, 25, 2355, 33006, 2355, 91942, 19645, 4892, 5270, 33006, 8900, 10790, 4391, 2696, 720, 692, 12299, 18362, 262, 2696], [91942, 19645, 4892, 5270, 33006, 8900, 10790, 4391, 2696, 720, 692, 12299, 18362, 262, 2696, 720, 2304, 12, 1721, 12, 1049, 22, 17674, 26292]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:35:00,734] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:35:00,734] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:35:00,814] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106210170>
[2025-05-16 23:35:00,814] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x104cb34d0> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:35:00,824] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1056d9ee0>
[2025-05-16 23:35:00,824] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:00,824] [DEBUG] send_request_headers.complete
[2025-05-16 23:35:00,824] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:35:00,824] [DEBUG] send_request_body.complete
[2025-05-16 23:35:00,824] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:01,855] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:35:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'256'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-6d87b587bb-wvsnm'), (b'x-envoy-upstream-service-time', b'259'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9997645'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'14ms'), (b'x-request-id', b'req_e4783313d372654c6529a9d46626bce2'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Ueva6f7QyQ20fIdzXI8W_SSg6oFIaQi1lEjdL9Jzlhc-1747427701-1.0.1.1-yr7vfUkqY.41PLiMOzISYc_hfL.KV4tPtnC8.1OHvYR1igRqX2l.0o7kp8qo7HkgxOJd1RQKsMBeTdzqVmvDVSNUaV7t_hAMxlnRDqflD_8; path=/; expires=Fri, 16-May-25 21:05:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=vgkNo7EP6WmtI.wjvU4cX5vlHTjWL6QXG1EeN3l2JzM-1747427701919-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940da8ba9b46542a-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:35:01,856] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:35:01,856] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:35:02,263] [DEBUG] receive_response_body.complete
[2025-05-16 23:35:02,263] [DEBUG] response_closed.started
[2025-05-16 23:35:02,263] [DEBUG] response_closed.complete
[2025-05-16 23:35:02,263] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Fri, 16 May 2025 20:35:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002-v2'), ('openai-organization', 'soter-analytics'), ('openai-processing-ms', '256'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('via', 'envoy-router-6d87b587bb-wvsnm'), ('x-envoy-upstream-service-time', '259'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '10000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '9997645'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '14ms'), ('x-request-id', 'req_e4783313d372654c6529a9d46626bce2'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Ueva6f7QyQ20fIdzXI8W_SSg6oFIaQi1lEjdL9Jzlhc-1747427701-1.0.1.1-yr7vfUkqY.41PLiMOzISYc_hfL.KV4tPtnC8.1OHvYR1igRqX2l.0o7kp8qo7HkgxOJd1RQKsMBeTdzqVmvDVSNUaV7t_hAMxlnRDqflD_8; path=/; expires=Fri, 16-May-25 21:05:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=vgkNo7EP6WmtI.wjvU4cX5vlHTjWL6QXG1EeN3l2JzM-1747427701919-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '940da8ba9b46542a-TLL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
[2025-05-16 23:35:02,263] [DEBUG] request_id: req_e4783313d372654c6529a9d46626bce2
[2025-05-16 23:35:02,271] [DEBUG] Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
[2025-05-16 23:35:02,272] [INFO] Loading faiss.
[2025-05-16 23:35:02,296] [INFO] Successfully loaded faiss.
[2025-05-16 23:35:02,299] [INFO] Failed to load GPU Faiss: name 'GpuIndexIVFFlat' is not defined. Will not load constructor refs for GPU indexes. This is only an error if you're trying to use GPU Faiss.
[2025-05-16 23:35:02,301] [INFO] Vectorstore built and saved locally.
[2025-05-16 23:35:02,301] [INFO] Document processed and vectorstore updated.
[2025-05-16 23:35:06,727] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:35:06,727] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:35:06,727] [DEBUG] Calling on_field_data with data[9:68]
[2025-05-16 23:35:06,727] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:35:06,727] [DEBUG] Calling on_end with no data
[2025-05-16 23:35:06,727] [INFO] Received question: что в файле?
[2025-05-16 23:35:06,728] [DEBUG] Retrieving top 5 relevant chunks for query: 'что в файле?'
[2025-05-16 23:35:06,728] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-7039279b-16c8-4cf9-85b9-4cefee5475a9', 'post_parser': <function Embeddings.create.<locals>.parser at 0x1056fd120>, 'json_data': {'input': [[6148, 25657, 5927, 47418, 1532, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:35:06,728] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:35:06,729] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:06,729] [DEBUG] send_request_headers.complete
[2025-05-16 23:35:06,729] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:35:06,729] [DEBUG] send_request_body.complete
[2025-05-16 23:35:06,729] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:07,528] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:35:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'98'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-65cd595478-58hbb'), (b'x-envoy-upstream-service-time', b'103'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9999994'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_1c5856ce17100d081e37cbb3f5b693d8'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940da8df8a6d542a-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:35:07,528] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:35:07,529] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:35:07,529] [DEBUG] receive_response_body.complete
[2025-05-16 23:35:07,529] [DEBUG] response_closed.started
[2025-05-16 23:35:07,529] [DEBUG] response_closed.complete
[2025-05-16 23:35:07,529] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 16 May 2025 20:35:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '98', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-65cd595478-58hbb', 'x-envoy-upstream-service-time': '103', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9999994', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_1c5856ce17100d081e37cbb3f5b693d8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940da8df8a6d542a-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:35:07,529] [DEBUG] request_id: req_1c5856ce17100d081e37cbb3f5b693d8
[2025-05-16 23:35:07,533] [INFO] Retrieved 5 documents from vectorstore.
[2025-05-16 23:35:07,533] [INFO] Received question for LLM.
[2025-05-16 23:35:07,537] [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b1305e46-03b6-425e-bded-eb7c6bb5580b', 'json_data': {'messages': [{'role': 'user', 'content': 'Context: members are trained in the following:  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 3 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \n1. Information on OSHA’s Right-To-Know law, \n2. Hazardous chemicals present in the work area, concerning \nboth physical and health hazards, \n3. Operations in the work area where hazardous chemicals are \npresent, \n4. Details of the Hazard Communication Program developed by\n\nADVICS North America \n \nArea Manager                   Date \n          Area Executive    Date \n05-01-2007 Original Issue\n\nNumber: AG-SE-0000-04 \nPage: 4 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nADVICS contact.  In addition, the ADVICS contact will also provide \nspecific information to the contractor regarding: \n1. Any SDS relevant to the task. \n2. Any special hazards of the task itself, such as tank entry, \nspecial maintenance tasks, open circuits, etc. \n3. The labeling requirements of all chemical containers and the \nsystem in use at ADVICS.\n\npresent, \n4. Details of the Hazard Communication Program developed by \nADVICS, including location and availability of SDS, and the \nwritten Hazard Communication Program, \n5. Training methods used to detect the presence or release of \nhazardous chemical, \n6. Measures and employee can take to protect themselves from \npossible exposure to hazardous chemicals. \nii. Any time a chemical with a new hazard class is introduced into the \nwork area, the supervisor is responsible for making sure employees\n\nsupply an SDS with the shipment of that product. \n  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 2 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nIII. Container Labeling \na. All containers in the work place will be labeled with the following \ninformation: \ni. Identity of the hazardous chemical, \nii. Appropriate hazard warnings. \nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers\n\nQuestion: что в файле?'}], 'model': 'gpt-3.5-turbo', 'n': 1, 'stream': False, 'temperature': 0.2}}
[2025-05-16 23:35:07,537] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
[2025-05-16 23:35:07,537] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:35:07,546] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106102240>
[2025-05-16 23:35:07,546] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x1056e2c50> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:35:07,557] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106101ee0>
[2025-05-16 23:35:07,557] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:07,557] [DEBUG] send_request_headers.complete
[2025-05-16 23:35:07,557] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:35:07,558] [DEBUG] send_request_body.complete
[2025-05-16 23:35:07,558] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:35:10,462] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:35:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'2380'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2384'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999474'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_68a3eb9912dfde50c3c35350fbd027cb'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=EdN1FFSNFhc6fp5byQ68Vwg7MzQfb.3RcVxnjd8cFCQ-1747427710-1.0.1.1-ke3Kvnb4FLtb_MhiNWYzVuvlv1aYa5yaR5k3VsJX0_NnU9zl3Do6JGxZwmC47nfdn5CK2iX7MIXih5rFGc2RQOj71qsatu9iwz2E5iS_gUE; path=/; expires=Fri, 16-May-25 21:05:10 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=SFgSKjU5PQjWW1X3WdJWqS27z0bTCcd9fa96hSkUico-1747427710526-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940da8e4a9345438-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:35:10,463] [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-05-16 23:35:10,463] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:35:10,467] [DEBUG] receive_response_body.complete
[2025-05-16 23:35:10,467] [DEBUG] response_closed.started
[2025-05-16 23:35:10,467] [DEBUG] response_closed.complete
[2025-05-16 23:35:10,467] [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 16 May 2025 20:35:10 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'soter-analytics'), ('openai-processing-ms', '2380'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '2384'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999474'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_68a3eb9912dfde50c3c35350fbd027cb'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=EdN1FFSNFhc6fp5byQ68Vwg7MzQfb.3RcVxnjd8cFCQ-1747427710-1.0.1.1-ke3Kvnb4FLtb_MhiNWYzVuvlv1aYa5yaR5k3VsJX0_NnU9zl3Do6JGxZwmC47nfdn5CK2iX7MIXih5rFGc2RQOj71qsatu9iwz2E5iS_gUE; path=/; expires=Fri, 16-May-25 21:05:10 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=SFgSKjU5PQjWW1X3WdJWqS27z0bTCcd9fa96hSkUico-1747427710526-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '940da8e4a9345438-TLL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
[2025-05-16 23:35:10,467] [DEBUG] request_id: req_68a3eb9912dfde50c3c35350fbd027cb
[2025-05-16 23:35:10,473] [INFO] LLM response successfully generated.
[2025-05-16 23:35:10,473] [INFO] Answer generated successfully.
[2025-05-16 23:37:30,793] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:37:30,793] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:37:30,793] [DEBUG] Calling on_field_data with data[9:179]
[2025-05-16 23:37:30,793] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:37:30,793] [DEBUG] Calling on_end with no data
[2025-05-16 23:37:30,794] [INFO] Received question: сформулируй одним предложением
[2025-05-16 23:37:30,794] [DEBUG] Retrieving top 5 relevant chunks for query: 'сформулируй одним предложением'
[2025-05-16 23:37:30,795] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-9983a7b4-795d-4fa5-b12a-c43834e740d5', 'post_parser': <function Embeddings.create.<locals>.parser at 0x104920540>, 'json_data': {'input': [[2297, 57719, 3865, 11320, 20346, 12415, 53419, 2156, 16494, 57925, 82941, 9882, 10298]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:37:30,796] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:37:30,796] [DEBUG] close.started
[2025-05-16 23:37:30,797] [DEBUG] close.complete
[2025-05-16 23:37:30,797] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:37:30,853] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106103f80>
[2025-05-16 23:37:30,853] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x104cb34d0> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:37:30,865] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106103aa0>
[2025-05-16 23:37:30,866] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:30,866] [DEBUG] send_request_headers.complete
[2025-05-16 23:37:30,866] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:37:30,866] [DEBUG] send_request_body.complete
[2025-05-16 23:37:30,866] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:31,327] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:37:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'46'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64bb485d79-2hvbx'), (b'x-envoy-upstream-service-time', b'57'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9999987'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_2481312dcefddc0c6473897d79375545'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dac645f95abed-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:37:31,327] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:37:31,327] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:37:31,327] [DEBUG] receive_response_body.complete
[2025-05-16 23:37:31,327] [DEBUG] response_closed.started
[2025-05-16 23:37:31,327] [DEBUG] response_closed.complete
[2025-05-16 23:37:31,328] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 16 May 2025 20:37:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '46', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64bb485d79-2hvbx', 'x-envoy-upstream-service-time': '57', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9999987', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_2481312dcefddc0c6473897d79375545', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dac645f95abed-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:37:31,328] [DEBUG] request_id: req_2481312dcefddc0c6473897d79375545
[2025-05-16 23:37:31,329] [INFO] Retrieved 5 documents from vectorstore.
[2025-05-16 23:37:31,329] [INFO] Received question for LLM.
[2025-05-16 23:37:31,330] [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e232ad26-1de4-479b-8416-b7e688989d82', 'json_data': {'messages': [{'role': 'user', 'content': 'Context: present, \n4. Details of the Hazard Communication Program developed by \nADVICS, including location and availability of SDS, and the \nwritten Hazard Communication Program, \n5. Training methods used to detect the presence or release of \nhazardous chemical, \n6. Measures and employee can take to protect themselves from \npossible exposure to hazardous chemicals. \nii. Any time a chemical with a new hazard class is introduced into the \nwork area, the supervisor is responsible for making sure employees\n\nADVICS North America \n \nArea Manager                   Date \n          Area Executive    Date \n05-01-2007 Original Issue\n\nsupply an SDS with the shipment of that product. \n  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 2 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nIII. Container Labeling \na. All containers in the work place will be labeled with the following \ninformation: \ni. Identity of the hazardous chemical, \nii. Appropriate hazard warnings. \nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers\n\nmembers are trained in the following:  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 3 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \n1. Information on OSHA’s Right-To-Know law, \n2. Hazardous chemicals present in the work area, concerning \nboth physical and health hazards, \n3. Operations in the work area where hazardous chemicals are \npresent, \n4. Details of the Hazard Communication Program developed by\n\nThe team members will be trained to avoid both chemical \nand task hazards involved with the non-routine task(s). \n4. Supervisors will inform employees of the hazards of \nchemicals in unlabeled pipes prior to maintenance or other \nwork on pipes and equipment. \nc. Methods of Informing Contractors of Chemical Hazards \ni. All outside contractors working at ADVICS will be provided \ncontractor safety training.  This training is the responsibility of the  Group Procedure \nNumber: AG-SE-0000-04\n\nQuestion: сформулируй одним предложением'}], 'model': 'gpt-3.5-turbo', 'n': 1, 'stream': False, 'temperature': 0.2}}
[2025-05-16 23:37:31,331] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
[2025-05-16 23:37:31,331] [DEBUG] close.started
[2025-05-16 23:37:31,331] [DEBUG] close.complete
[2025-05-16 23:37:31,331] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:37:31,340] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1061292b0>
[2025-05-16 23:37:31,340] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x1056e2c50> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:37:31,352] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106128f80>
[2025-05-16 23:37:31,352] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:31,352] [DEBUG] send_request_headers.complete
[2025-05-16 23:37:31,352] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:37:31,352] [DEBUG] send_request_body.complete
[2025-05-16 23:37:31,352] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:33,015] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:37:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'1271'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1439'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999463'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_187221feab0b6dba0ef93469d34a3eee'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dac676e695c23-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:37:33,016] [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-05-16 23:37:33,016] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:37:33,016] [DEBUG] receive_response_body.complete
[2025-05-16 23:37:33,016] [DEBUG] response_closed.started
[2025-05-16 23:37:33,016] [DEBUG] response_closed.complete
[2025-05-16 23:37:33,016] [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 16 May 2025 20:37:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '1271', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1439', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999463', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_187221feab0b6dba0ef93469d34a3eee', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dac676e695c23-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:37:33,017] [DEBUG] request_id: req_187221feab0b6dba0ef93469d34a3eee
[2025-05-16 23:37:33,017] [INFO] LLM response successfully generated.
[2025-05-16 23:37:33,017] [INFO] Answer generated successfully.
[2025-05-16 23:37:44,725] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:37:44,726] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:37:44,726] [DEBUG] Calling on_field_data with data[9:45]
[2025-05-16 23:37:44,726] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:37:44,727] [DEBUG] Calling on_end with no data
[2025-05-16 23:37:44,727] [INFO] Received question: короче
[2025-05-16 23:37:44,728] [DEBUG] Retrieving top 5 relevant chunks for query: 'короче'
[2025-05-16 23:37:44,729] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-ae6b5ff5-3055-418b-bb2f-f9b2388faa41', 'post_parser': <function Embeddings.create.<locals>.parser at 0x104920540>, 'json_data': {'input': [[4898, 9239, 38438, 1532]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:37:44,731] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:37:44,731] [DEBUG] close.started
[2025-05-16 23:37:44,732] [DEBUG] close.complete
[2025-05-16 23:37:44,732] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:37:44,741] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10612a5d0>
[2025-05-16 23:37:44,741] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x104cb34d0> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:37:44,755] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10612a1b0>
[2025-05-16 23:37:44,755] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:44,756] [DEBUG] send_request_headers.complete
[2025-05-16 23:37:44,756] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:37:44,756] [DEBUG] send_request_body.complete
[2025-05-16 23:37:44,756] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:45,271] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:37:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'44'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-6f58bc9969-nfvp5'), (b'x-envoy-upstream-service-time', b'46'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9999996'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_9237870c0d76d4a4e5cc386f5730f1bb'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dacbb2e465c24-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:37:45,272] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:37:45,272] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:37:45,273] [DEBUG] receive_response_body.complete
[2025-05-16 23:37:45,273] [DEBUG] response_closed.started
[2025-05-16 23:37:45,273] [DEBUG] response_closed.complete
[2025-05-16 23:37:45,274] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 16 May 2025 20:37:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '44', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-6f58bc9969-nfvp5', 'x-envoy-upstream-service-time': '46', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9999996', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9237870c0d76d4a4e5cc386f5730f1bb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dacbb2e465c24-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:37:45,274] [DEBUG] request_id: req_9237870c0d76d4a4e5cc386f5730f1bb
[2025-05-16 23:37:45,276] [INFO] Retrieved 5 documents from vectorstore.
[2025-05-16 23:37:45,276] [INFO] Received question for LLM.
[2025-05-16 23:37:45,278] [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4cbf560c-7af9-4a97-9de1-8f5b4e67b224', 'json_data': {'messages': [{'role': 'user', 'content': 'Context: ADVICS North America \n \nArea Manager                   Date \n          Area Executive    Date \n05-01-2007 Original Issue\n\nmembers are trained in the following:  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 3 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \n1. Information on OSHA’s Right-To-Know law, \n2. Hazardous chemicals present in the work area, concerning \nboth physical and health hazards, \n3. Operations in the work area where hazardous chemicals are \npresent, \n4. Details of the Hazard Communication Program developed by\n\nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers \ni. It is the responsibility of the Receiving Department Supervisor to \nensure all the incoming containers are labeled with the appropriate \ninformation (identity, hazard, warnings, manufacturer, etc.) \nii. The following procedure will be followed to ensure that new \ncontainers entering the workplace are properly labeled: \n1. The Receiving Supervisor or his or her designee will inspect\n\nrelevant team members(s). \n3. The supervisor will inform the team members of the hazards \nassociated with the chemicals involved in the non-routine \ntasks, such as inhalation of dust for a dust collector. \nLikewise, the supervisor will also inform the employee(s) of \nthe hazards associated with the non-routine task itself, such \nas tank entry, special maintenance tasks, open circuits, etc. \nThe team members will be trained to avoid both chemical\n\nwork area, the supervisor is responsible for making sure employees \nare aware of the hazards of the new chemical, using the Safety Data \nSheet as a guide. \nb. Methods of Informing Team members of the Hazards of Non-Routine \nTasks \ni. If any such task will be encountered, the supervisor, in order to \nensure the health and safety of the employee(s) performing the \ntask, will follow the procedures listed below before beginning the \ntask:\n\nQuestion: короче'}], 'model': 'gpt-3.5-turbo', 'n': 1, 'stream': False, 'temperature': 0.2}}
[2025-05-16 23:37:45,280] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
[2025-05-16 23:37:45,280] [DEBUG] close.started
[2025-05-16 23:37:45,281] [DEBUG] close.complete
[2025-05-16 23:37:45,281] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:37:45,291] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106103da0>
[2025-05-16 23:37:45,292] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x1056e2c50> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:37:45,306] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1061038c0>
[2025-05-16 23:37:45,306] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:45,306] [DEBUG] send_request_headers.complete
[2025-05-16 23:37:45,306] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:37:45,306] [DEBUG] send_request_body.complete
[2025-05-16 23:37:45,306] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:37:45,986] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:37:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'424'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'431'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999499'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_cb767e27477cab23c24ad39625a5adcf'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dacbead1dc7f3-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:37:45,986] [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-05-16 23:37:45,986] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:37:45,986] [DEBUG] receive_response_body.complete
[2025-05-16 23:37:45,986] [DEBUG] response_closed.started
[2025-05-16 23:37:45,986] [DEBUG] response_closed.complete
[2025-05-16 23:37:45,986] [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 16 May 2025 20:37:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '424', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '431', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999499', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_cb767e27477cab23c24ad39625a5adcf', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dacbead1dc7f3-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:37:45,987] [DEBUG] request_id: req_cb767e27477cab23c24ad39625a5adcf
[2025-05-16 23:37:45,987] [INFO] LLM response successfully generated.
[2025-05-16 23:37:45,987] [INFO] Answer generated successfully.
[2025-05-16 23:38:02,948] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:38:02,949] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:38:02,949] [DEBUG] Calling on_field_data with data[9:64]
[2025-05-16 23:38:02,949] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:38:02,949] [DEBUG] Calling on_end with no data
[2025-05-16 23:38:02,949] [INFO] Received question: на русском
[2025-05-16 23:38:02,949] [DEBUG] Retrieving top 5 relevant chunks for query: 'на русском'
[2025-05-16 23:38:02,949] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-94e93065-f357-4fb4-b518-cc7158a79362', 'post_parser': <function Embeddings.create.<locals>.parser at 0x1056fd620>, 'json_data': {'input': [[14525, 18600, 44155, 66144, 12507]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:38:02,949] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:38:02,950] [DEBUG] close.started
[2025-05-16 23:38:02,950] [DEBUG] close.complete
[2025-05-16 23:38:02,950] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:38:02,957] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10612ac30>
[2025-05-16 23:38:02,957] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x104cb34d0> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:38:02,969] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1061294f0>
[2025-05-16 23:38:02,969] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:02,969] [DEBUG] send_request_headers.complete
[2025-05-16 23:38:02,969] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:38:02,969] [DEBUG] send_request_body.complete
[2025-05-16 23:38:02,969] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:03,318] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:38:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'87'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-778b4c7b7f-jtjpx'), (b'x-envoy-upstream-service-time', b'91'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9999994'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_b951a565d880f4a5379392718dc0af00'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dad2d0e73c7da-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:38:03,319] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:38:03,319] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:38:03,319] [DEBUG] receive_response_body.complete
[2025-05-16 23:38:03,319] [DEBUG] response_closed.started
[2025-05-16 23:38:03,319] [DEBUG] response_closed.complete
[2025-05-16 23:38:03,319] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 16 May 2025 20:38:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '87', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-778b4c7b7f-jtjpx', 'x-envoy-upstream-service-time': '91', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9999994', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b951a565d880f4a5379392718dc0af00', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dad2d0e73c7da-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:38:03,319] [DEBUG] request_id: req_b951a565d880f4a5379392718dc0af00
[2025-05-16 23:38:03,320] [INFO] Retrieved 5 documents from vectorstore.
[2025-05-16 23:38:03,320] [INFO] Received question for LLM.
[2025-05-16 23:38:03,320] [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c1827a3a-d0a1-432a-8bc4-bcb936f89152', 'json_data': {'messages': [{'role': 'user', 'content': 'Context: ADVICS North America \n \nArea Manager                   Date \n          Area Executive    Date \n05-01-2007 Original Issue\n\nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers \ni. It is the responsibility of the Receiving Department Supervisor to \nensure all the incoming containers are labeled with the appropriate \ninformation (identity, hazard, warnings, manufacturer, etc.) \nii. The following procedure will be followed to ensure that new \ncontainers entering the workplace are properly labeled: \n1. The Receiving Supervisor or his or her designee will inspect\n\nmembers are trained in the following:  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 3 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \n1. Information on OSHA’s Right-To-Know law, \n2. Hazardous chemicals present in the work area, concerning \nboth physical and health hazards, \n3. Operations in the work area where hazardous chemicals are \npresent, \n4. Details of the Hazard Communication Program developed by\n\nNumber: AG-SE-0000-04 \nPage: 4 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nADVICS contact.  In addition, the ADVICS contact will also provide \nspecific information to the contractor regarding: \n1. Any SDS relevant to the task. \n2. Any special hazards of the task itself, such as tank entry, \nspecial maintenance tasks, open circuits, etc. \n3. The labeling requirements of all chemical containers and the \nsystem in use at ADVICS.\n\nsupply an SDS with the shipment of that product. \n  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 2 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nIII. Container Labeling \na. All containers in the work place will be labeled with the following \ninformation: \ni. Identity of the hazardous chemical, \nii. Appropriate hazard warnings. \nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers\n\nQuestion: на русском'}], 'model': 'gpt-3.5-turbo', 'n': 1, 'stream': False, 'temperature': 0.2}}
[2025-05-16 23:38:03,320] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
[2025-05-16 23:38:03,320] [DEBUG] close.started
[2025-05-16 23:38:03,321] [DEBUG] close.complete
[2025-05-16 23:38:03,321] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:38:03,328] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106129a60>
[2025-05-16 23:38:03,328] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x1056e2c50> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:38:03,341] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1061297f0>
[2025-05-16 23:38:03,341] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:03,341] [DEBUG] send_request_headers.complete
[2025-05-16 23:38:03,341] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:38:03,341] [DEBUG] send_request_body.complete
[2025-05-16 23:38:03,341] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:04,293] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:38:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'702'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'707'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999478'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_2bb0131e583764ed87c2027fc39d8b1a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dad2f5867543e-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:38:04,293] [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-05-16 23:38:04,293] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:38:04,298] [DEBUG] receive_response_body.complete
[2025-05-16 23:38:04,298] [DEBUG] response_closed.started
[2025-05-16 23:38:04,298] [DEBUG] response_closed.complete
[2025-05-16 23:38:04,298] [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 16 May 2025 20:38:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '702', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '707', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999478', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_2bb0131e583764ed87c2027fc39d8b1a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dad2f5867543e-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:38:04,298] [DEBUG] request_id: req_2bb0131e583764ed87c2027fc39d8b1a
[2025-05-16 23:38:04,299] [INFO] LLM response successfully generated.
[2025-05-16 23:38:04,299] [INFO] Answer generated successfully.
[2025-05-16 23:38:33,804] [DEBUG] Calling on_field_start with no data
[2025-05-16 23:38:33,804] [DEBUG] Calling on_field_name with data[0:8]
[2025-05-16 23:38:33,804] [DEBUG] Calling on_field_data with data[9:186]
[2025-05-16 23:38:33,804] [DEBUG] Calling on_field_end with no data
[2025-05-16 23:38:33,804] [DEBUG] Calling on_end with no data
[2025-05-16 23:38:33,804] [INFO] Received question: какие сферы затрагивает документ
[2025-05-16 23:38:33,804] [DEBUG] Retrieving top 5 relevant chunks for query: 'какие сферы затрагивает документ'
[2025-05-16 23:38:33,804] [DEBUG] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-3b93e3db-99d3-4243-aecb-6d189d706a28', 'post_parser': <function Embeddings.create.<locals>.parser at 0x10610ec00>, 'json_data': {'input': [[4898, 16248, 50306, 5524, 19916, 7753, 4655, 11122, 8131, 11001, 111, 28089, 28007, 7952, 92533]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-05-16 23:38:33,805] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-05-16 23:38:33,805] [DEBUG] close.started
[2025-05-16 23:38:33,805] [DEBUG] close.complete
[2025-05-16 23:38:33,805] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:38:33,814] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10612bec0>
[2025-05-16 23:38:33,814] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x104cb34d0> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:38:33,827] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x106128800>
[2025-05-16 23:38:33,827] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:33,827] [DEBUG] send_request_headers.complete
[2025-05-16 23:38:33,827] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:38:33,827] [DEBUG] send_request_body.complete
[2025-05-16 23:38:33,827] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:34,640] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:38:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'79'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-77b75fd56c-5zvsk'), (b'x-envoy-upstream-service-time', b'266'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9999984'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_ba3301300cca5e5fbc7a6fc4b42787c8'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dadedd9aa7126-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:38:34,640] [INFO] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-05-16 23:38:34,640] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:38:34,641] [DEBUG] receive_response_body.complete
[2025-05-16 23:38:34,641] [DEBUG] response_closed.started
[2025-05-16 23:38:34,641] [DEBUG] response_closed.complete
[2025-05-16 23:38:34,641] [DEBUG] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 16 May 2025 20:38:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '79', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-77b75fd56c-5zvsk', 'x-envoy-upstream-service-time': '266', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9999984', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ba3301300cca5e5fbc7a6fc4b42787c8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dadedd9aa7126-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:38:34,641] [DEBUG] request_id: req_ba3301300cca5e5fbc7a6fc4b42787c8
[2025-05-16 23:38:34,642] [INFO] Retrieved 5 documents from vectorstore.
[2025-05-16 23:38:34,642] [INFO] Received question for LLM.
[2025-05-16 23:38:34,643] [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2685d099-6669-4525-b97d-e403a75d6e86', 'json_data': {'messages': [{'role': 'user', 'content': 'Context: ADVICS North America \n \nArea Manager                   Date \n          Area Executive    Date \n05-01-2007 Original Issue\n\npresent, \n4. Details of the Hazard Communication Program developed by \nADVICS, including location and availability of SDS, and the \nwritten Hazard Communication Program, \n5. Training methods used to detect the presence or release of \nhazardous chemical, \n6. Measures and employee can take to protect themselves from \npossible exposure to hazardous chemicals. \nii. Any time a chemical with a new hazard class is introduced into the \nwork area, the supervisor is responsible for making sure employees\n\nmembers are trained in the following:  Group Procedure \nNumber: AG-SE-0000-04 \nPage: 3 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \n1. Information on OSHA’s Right-To-Know law, \n2. Hazardous chemicals present in the work area, concerning \nboth physical and health hazards, \n3. Operations in the work area where hazardous chemicals are \npresent, \n4. Details of the Hazard Communication Program developed by\n\nNumber: AG-SE-0000-04 \nPage: 4 of 5 \nIssued By: ADVICS-NA  HR/GA Issued: 8/30/13 \nTitle: Hazard Communication Program Rev. Date:  \n \nADVICS contact.  In addition, the ADVICS contact will also provide \nspecific information to the contractor regarding: \n1. Any SDS relevant to the task. \n2. Any special hazards of the task itself, such as tank entry, \nspecial maintenance tasks, open circuits, etc. \n3. The labeling requirements of all chemical containers and the \nsystem in use at ADVICS.\n\nb. All labels will be legible and prominently displayed in English. \nc. Incoming containers \ni. It is the responsibility of the Receiving Department Supervisor to \nensure all the incoming containers are labeled with the appropriate \ninformation (identity, hazard, warnings, manufacturer, etc.) \nii. The following procedure will be followed to ensure that new \ncontainers entering the workplace are properly labeled: \n1. The Receiving Supervisor or his or her designee will inspect\n\nQuestion: какие сферы затрагивает документ'}], 'model': 'gpt-3.5-turbo', 'n': 1, 'stream': False, 'temperature': 0.2}}
[2025-05-16 23:38:34,644] [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
[2025-05-16 23:38:34,644] [DEBUG] close.started
[2025-05-16 23:38:34,644] [DEBUG] close.complete
[2025-05-16 23:38:34,644] [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-05-16 23:38:34,653] [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10613d460>
[2025-05-16 23:38:34,654] [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x1056e2c50> server_hostname='api.openai.com' timeout=None
[2025-05-16 23:38:34,665] [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10613cda0>
[2025-05-16 23:38:34,665] [DEBUG] send_request_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:34,665] [DEBUG] send_request_headers.complete
[2025-05-16 23:38:34,665] [DEBUG] send_request_body.started request=<Request [b'POST']>
[2025-05-16 23:38:34,665] [DEBUG] send_request_body.complete
[2025-05-16 23:38:34,665] [DEBUG] receive_response_headers.started request=<Request [b'POST']>
[2025-05-16 23:38:35,885] [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 16 May 2025 20:38:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'soter-analytics'), (b'openai-processing-ms', b'989'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1000'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999463'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_84c474d26b9c3e36fd2a0d70f2a6688b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'940dadf318c47126-TLL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-05-16 23:38:35,885] [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[2025-05-16 23:38:35,886] [DEBUG] receive_response_body.started request=<Request [b'POST']>
[2025-05-16 23:38:35,886] [DEBUG] receive_response_body.complete
[2025-05-16 23:38:35,886] [DEBUG] response_closed.started
[2025-05-16 23:38:35,886] [DEBUG] response_closed.complete
[2025-05-16 23:38:35,886] [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 16 May 2025 20:38:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'soter-analytics', 'openai-processing-ms': '989', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1000', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999463', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_84c474d26b9c3e36fd2a0d70f2a6688b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '940dadf318c47126-TLL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-05-16 23:38:35,886] [DEBUG] request_id: req_84c474d26b9c3e36fd2a0d70f2a6688b
[2025-05-16 23:38:35,887] [INFO] LLM response successfully generated.
[2025-05-16 23:38:35,887] [INFO] Answer generated successfully.
